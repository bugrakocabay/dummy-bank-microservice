// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: report.sql

package db

import (
	"context"
	"time"
)

const getDailyTransactionReport = `-- name: GetDailyTransactionReport :one
SELECT COUNT(*) AS num_transactions,
       AVG(transaction_amount) AS avg_transaction_amount,
       SUM(transaction_amount) AS total_transaction_amount,
       SUM(commission) AS total_commission, created_at::date AS day
FROM transactions
WHERE created_at::date = $1
GROUP BY day
`

type GetDailyTransactionReportRow struct {
	NumTransactions        int64     `json:"num_transactions"`
	AvgTransactionAmount   float64   `json:"avg_transaction_amount"`
	TotalTransactionAmount int64     `json:"total_transaction_amount"`
	TotalCommission        float64     `json:"total_commission"`
	Day                    time.Time `json:"day"`
}

func (q *Queries) GetDailyTransactionReport(ctx context.Context, createdAt time.Time) (GetDailyTransactionReportRow, error) {
	row := q.db.QueryRowContext(ctx, getDailyTransactionReport, createdAt)
	var i GetDailyTransactionReportRow
	err := row.Scan(
		&i.NumTransactions,
		&i.AvgTransactionAmount,
		&i.TotalTransactionAmount,
		&i.TotalCommission,
		&i.Day,
	)
	return i, err
}
